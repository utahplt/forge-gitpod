#lang forge

option run_sterling off


-- In Kodkod/Pardinus, univ and iden refer to the meta-universe (i.e. what atoms are
-- generated by the bounds), and so are incorrect when considering instances don't fully
-- populate sigs.

-- Alloy's univ and iden (AND REFLEXIVE TRANSITIIVE CLOSURE) are defined involving the
--  union of all sigs (including int), rather than directly invoking Kodkod's univ, iden, etc. 

option verbosity 0

sig A {r: set A}
sig B {}
sig C {}


test expect {
    testUniv : {univ != A + B + C + Int} is unsat
    testIden : {iden != {a1: A, a2: A | a1 = a2} + 
                        {b1: B, b2: B | b1 = b2} +
                        {c1: C, c2: C | c1 = c2} +
                        {i1: Int, i2: Int | i1 = i2}} is unsat
                    
    testRTC : {*r != iden + ^r} is unsat
}
